# Generated by Django 4.2.7 on 2025-07-25 14:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('venues', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('booking_start_time', models.DateTimeField()),
                ('booking_end_time', models.DateTimeField()),
                ('booking_status_code', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed')], max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_status_code', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Failed', 'Failed'), ('Refunded', 'Refunded')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('iot_verified', models.BooleanField(default=False)),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.company')),
                ('space', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='venues.space')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venues.venue')),
            ],
            options={
                'db_table': 'booking',
            },
        ),
        migrations.CreateModel(
            name='BookingPolicy',
            fields=[
                ('policy_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('policy_type', models.CharField(choices=[('cancellation', 'Cancellation Policy'), ('advance_booking', 'Advance Booking'), ('max_duration', 'Maximum Duration'), ('corporate_only', 'Corporate Only')], max_length=20)),
                ('policy_value', models.JSONField()),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('space', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='venues.space')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='venues.venue')),
            ],
        ),
        migrations.CreateModel(
            name='BookingParticipant',
            fields=[
                ('booking_participant_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('guest_email', models.EmailField(blank=True, max_length=254)),
                ('invited_flag', models.BooleanField(default=False)),
                ('checked_in_flag', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='bookings.booking')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'booking_participant',
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'booking_start_time'], name='booking_user_id_1aeca2_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['venue', 'booking_start_time'], name='booking_venue_i_30c1f9_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['space'], name='booking_space_i_979655_idx'),
        ),
    ]
