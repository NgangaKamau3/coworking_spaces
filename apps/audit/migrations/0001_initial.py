# Generated by Django 4.2.7 on 2025-07-25 14:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('activity_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('CREATE', 'Create Operation'), ('UPDATE', 'Update Operation'), ('DELETE', 'Delete Operation'), ('VIEW', 'View Operation'), ('PAYMENT', 'Payment Operation'), ('BOOKING', 'Booking Operation')], max_length=20)),
                ('activity_desc', models.TextField()),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_data', models.JSONField(blank=True, default=dict)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('activity_time', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_activity_log',
                'ordering': ['-activity_time'],
                'indexes': [models.Index(fields=['user', 'activity_time'], name='user_activi_user_id_ed419d_idx'), models.Index(fields=['activity_type', 'activity_time'], name='user_activi_activit_60ecfd_idx'), models.Index(fields=['ip_address'], name='user_activi_ip_addr_064cfe_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemAuditLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('component', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=50)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['component', 'timestamp'], name='audit_syste_compone_92a97f_idx'), models.Index(fields=['severity', 'timestamp'], name='audit_syste_severit_8585e8_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('event_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('FAILED_LOGIN', 'Failed Login Attempt'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('RATE_LIMIT_EXCEEDED', 'Rate Limit Exceeded'), ('INVALID_TOKEN', 'Invalid Token Usage'), ('PRIVILEGE_ESCALATION', 'Privilege Escalation Attempt')], max_length=30)),
                ('description', models.TextField()),
                ('username_attempted', models.CharField(blank=True, max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('metadata', models.JSONField(default=dict)),
                ('risk_score', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='audit_secur_event_t_cc3542_idx'), models.Index(fields=['ip_address', 'timestamp'], name='audit_secur_ip_addr_f49005_idx'), models.Index(fields=['risk_score'], name='audit_secur_risk_sc_756b2c_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataAccessLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('access_type', models.CharField(choices=[('READ', 'Data Read'), ('EXPORT', 'Data Export'), ('DELETE', 'Data Deletion'), ('ANONYMIZE', 'Data Anonymization')], max_length=20)),
                ('data_fields', models.JSONField(default=list)),
                ('reason', models.TextField()),
                ('legal_basis', models.CharField(max_length=100)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('accessed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_access_logs', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['accessed_user', 'accessed_at'], name='audit_dataa_accesse_c2d729_idx'), models.Index(fields=['access_type'], name='audit_dataa_access__1f4ac7_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('compliance_type', models.CharField(choices=[('GDPR_REQUEST', 'GDPR Data Request'), ('DATA_RETENTION', 'Data Retention Policy'), ('CONSENT_CHANGE', 'Consent Status Change'), ('DATA_BREACH', 'Data Breach Incident'), ('AUDIT_TRAIL', 'Audit Trail Access')], max_length=20)),
                ('description', models.TextField()),
                ('actions_taken', models.JSONField(default=list)),
                ('evidence', models.JSONField(default=dict)),
                ('regulation', models.CharField(default='GDPR', max_length=50)),
                ('retention_period', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subject_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['compliance_type', 'timestamp'], name='audit_compl_complia_a6db29_idx'), models.Index(fields=['subject_user', 'timestamp'], name='audit_compl_subject_e7ef8e_idx')],
            },
        ),
    ]
